/**
  *!! Coloco el grid-template-columns 1fr para establecer el contenido de
  la pagina como una unica columna que ocupe todo el espacio disponible
*/
.grid-models-container {
  display: grid;
  grid-template-columns: 1fr;
}

  /**
    *!! Coloco el comienzo y el fin del header para que ocupen todo el ancho
    de la columna establecida en la clase anterior (grid-models-container)
  */
  .grid-models-container > header{
    grid-column-start: 1;
    grid-column-end: -1;
  }
  
  /**
    *!! Coloco estas propiedades para que ocurra el mismo comportamiento que
    en el header
  */
  .grid-models-container > footer{
    grid-column-start: 1;
    grid-column-end: -1;
  }

.filter-sidebar {
  background-color: var(--color-off-white);
  padding: 2rem;
  color: var(--color-dark);
}

.filter-sidebar h2 {
  margin-bottom: 1rem;
}

/**
  *!! Aplico el mobile first, genera un espacio entre los diferentes elementos
  del formulario de filtros de 20px entre cada elemento.
*/
.filter-sidebar form {
  display: grid;
  row-gap: 20px;
}

.filter-sidebar form label {
  font-weight: bold;
}

.filter-sidebar form input,
.filter-sidebar form select {
  width: 100%;
  padding: 0.5rem;
  border: 1px solid var(--color-medium);
  border-radius: 5px;
  background-color: var(--color-white);
  color: var(--color-dark);
}

.filter-sidebar button {
  background-color: var(--color-dark);
  color: var(--color-white);
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.filter-sidebar button:hover {
  background-color: var(--color-medium);
}

/**
  *!! Aplico el mobile first, genera un espacio entre los diferentes elementos
  del contenedor de modelos de 20px entre cada card.
*/
.models-grid {
  padding: 2rem;
  display: grid;
  row-gap: 20px;
}

.config-button {
  display: inline-block;
  background-color: var(--color-dark);
  color: var(--color-white);
  text-decoration: none;
  padding: 0.5rem 1rem;
  border-radius: 5px;
  margin-top: 1rem;
  transition: background-color 0.3s;
}

.config-button:hover {
  background-color: var(--color-medium);
}

/**
  *!! Media query de 600px a 1000px
*/
@media (max-width: 1000px) and (min-width: 600px) {

  /**
    *!! Coloco el grid-template-columns: auto 1fr, para que el en el formulario
    aparezan 2 columnas, una que sea para los labels, la cual ocupara el ancho
    de la etiqueta, y otra para los inputs, la cual ocupara el espacio resante
    del contenedor del formulario.
  */
  .filter-sidebar form {
    grid-template-columns: auto 1fr;
    column-gap: 20px;
  }
  
  /**
    *!! Coloco las propiedades de inicio y fin de columna en la fila del buton
    para que no se aplique la distribucion establecida anteriormente en el formulario,
    y el justify-self para que el propio boton se centre en la columna establecida.
  */
  .filter-sidebar button {
    grid-column-start: 1;
    grid-column-end: -1;
    justify-self: center;
  }

}

/**
  *!! Media query que se aplica apartir de los 600px
*/
@media (min-width : 600px){
  /**
    *!! Coloco el grid-template-columns para que los diferentes elementos
    del contenedor de modelos se vayan adapatando al espacio que hay disponible
    en el que la medida minima de los elementos es de 250px y la maxima el
    espacio disponible
  */
  .models-grid {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    column-gap: 20px;
    row-gap : 20px
  }
}

/**
  *!! Media query para anchuras mayores a 1000px
*/
@media (min-width : 1000px){

  /**
    *!! Coloco el grid-template-columns para establece dos columnas en el contenedor
    de los modelos una de 300px la cual se aplicara a la parte de los filtros
    y una que ocupe el ancho restante disponible para el contenedor de cards de 
    modelos, estas dos columnas no se ven reflejadas en el header y el footer
    por lo explicado en las clases de estos elementos.
  */
  .grid-models-container {
    display: grid;
    grid-template-columns: 300px 1fr;
  }
  
}